name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  build_and_test_and_sonar:
    runs-on: ubuntu-latest
    env:
      VITE_PROD_URL_PHOTO_LIST: ${{ secrets.VITE_PROD_URL_PHOTO_LIST }}
      VITE_DEV_URL_PHOTO_LIST: ${{ secrets.VITE_DEV_URL_PHOTO_LIST }}
      VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
      VITE_API_URL: ${{ secrets.VITE_API_URL }}
      PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
      BFF_API_KEY: ${{ secrets.BFF_API_KEY }}
      CORS_WHITELIST: ${{ secrets.CORS_WHITELIST }}

    strategy:
      matrix:
        node-version: [18.x]
        app: ["apps/host", "apps/photo-gallery", "services/BFF"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build and test ${{ matrix.app }}
        run: |
          cd ${{ matrix.app }}
          yarn build
          yarn test

      - name: SonarCloud analysis (${{ matrix.app }})
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ${{ matrix.app }}
